<a number from 0-3> -> the starting position of the robot 0
corner opposite ramp is 1
corner on the way into ramp is 0
corner on way out of ramp is 2
corner nearest ramp is 3

M -> has moved -> 1 point
B -> moves backward over a corner -> backs++
Tu -> Token up -> ntokens++
Td -> Token Down -> ntokens--
Ru -> Ramp up -> if ((start position - corners) % 4 == 0 and backs == 0) then 3 points, onRamp = true 
Rd -> Ramp down -> if ((start position - corners) % 4 == 3 and backs == 0) then 3 points, onRamp = false
C -> corner passed -> if (backs > 0) then backs--  
                      else (
                            2 points + ntokens + stokens, 
                            if (startpos - corners) % 4 == 1
                               then (onRamp = false),
                            corners++
                           )  
Su -> Super token up -> stokens++
Sd -> Super Token down -> stokens--
